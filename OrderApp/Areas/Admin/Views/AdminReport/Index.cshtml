
@{
    ViewBag.Title = "Thông kê";
}
<div class="section">
    <div class="admin-control">
        <div class="admin-control-left">
            <select name="the-loai-tk" id="the-loai-tk" onchange="thongKe()">
                <option>Tất cả</option>
                <option>Món chay</option>
                <option>Món mặn</option>
                <option>Món lẩu</option>
                <option>Món ăn vặt</option>
                <option>Món tráng miệng</option>
                <option>Nước uống</option>
                <option>Món khác</option>
            </select>
        </div>
        <div class="admin-control-center">
            <form action="" class="form-search">
                <span class="search-btn"><i class="fa-light fa-magnifying-glass"></i></span>
                <input id="form-search-tk" type="text" class="form-search-input" placeholder="Tìm kiếm tên món..." oninput="thongKe()">
            </form>
        </div>
        <div class="admin-control-right">
            <form action="" class="fillter-date">
                <div>
                    <label for="time-start">Từ</label>
                    <input type="date" class="form-control-date" id="time-start-tk" onchange="thongKe()">
                </div>
                <div>
                    <label for="time-end">Đến</label>
                    <input type="date" class="form-control-date" id="time-end-tk" onchange="thongKe()">
                </div>
            </form>
            <button class="btn-reset-order" onclick="thongKe(1)"><i class="fa-regular fa-arrow-up-short-wide"></i></i></button>
            <button class="btn-reset-order" onclick="thongKe(2)"><i class="fa-regular fa-arrow-down-wide-short"></i></button>
            <button class="btn-reset-order" onclick="thongKe(0)"><i class="fa-light fa-arrow-rotate-right"></i></button>
        </div>
    </div>
    <div class="order-statistical" id="order-statistical">
        <div class="order-statistical-item">
            <div class="order-statistical-item-content">
                <p class="order-statistical-item-content-desc">Sản phẩm được bán ra</p>
                <h4 class="order-statistical-item-content-h" id="quantity-product"></h4>
            </div>
            <div class="order-statistical-item-icon">
                <i class="fa-light fa-salad"></i>
            </div>
        </div>
        <div class="order-statistical-item">
            <div class="order-statistical-item-content">
                <p class="order-statistical-item-content-desc">Số lượng bán ra</p>
                <h4 class="order-statistical-item-content-h" id="quantity-order"></h4>
            </div>
            <div class="order-statistical-item-icon">
                <i class="fa-light fa-file-lines"></i>
            </div>
        </div>
        <div class="order-statistical-item">
            <div class="order-statistical-item-content">
                <p class="order-statistical-item-content-desc">Doanh thu</p>
                <h4 class="order-statistical-item-content-h" id="quantity-sale"></h4>
            </div>
            <div class="order-statistical-item-icon">
                <i class="fa-light fa-dollar-sign"></i>
            </div>
        </div>
    </div>
    <div class="table">
        <table width="100%">
            <thead>
                <tr>
                    <td>STT</td>
                    <td>Tên món</td>
                    <td>Số lượng bán</td>
                    <td>Doanh thu</td>
                    <td></td>
                </tr>
            </thead>
            <tbody id="showTk">
            </tbody>
        </table>
    </div>
</div>
<script>
    function vnd(price) {
        return price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }
    // Create Object Thong ke
    function createObj() {
        let orders = localStorage.getItem("order") ? JSON.parse(localStorage.getItem("order")) : [];
        let products = localStorage.getItem("products") ? JSON.parse(localStorage.getItem("products")) : [];
        let orderDetails = localStorage.getItem("orderDetails") ? JSON.parse(localStorage.getItem("orderDetails")) : [];
        let result = [];
        orderDetails.forEach(item => {
            // Lấy thông tin sản phẩm
            let prod = products.find(product => { return product.id == item.id; });
            let obj = new Object();
            obj.id = item.id;
            obj.madon = item.madon;
            obj.price = item.price;
            obj.quantity = item.soluong;
            obj.category = prod.category;
            obj.title = prod.title;
            obj.img = prod.img;
            obj.time = (orders.find(order => order.id == item.madon)).thoigiandat;
            result.push(obj);
        });
        return result;
    }

    // Filter 
    function thongKe(mode) {
        let categoryTk = document.getElementById("the-loai-tk").value;
        let ct = document.getElementById("form-search-tk").value;
        let timeStart = document.getElementById("time-start-tk").value;
        let timeEnd = document.getElementById("time-end-tk").value;
        if (timeEnd < timeStart && timeEnd != "" && timeStart != "") {
            alert("Lựa chọn thời gian sai !");
            return;
        }
        let arrDetail = createObj();
        let result = categoryTk == "Tất cả" ? arrDetail : arrDetail.filter((item) => {
            return item.category == categoryTk;
        });

        result = ct == "" ? result : result.filter((item) => {
            return (item.title.toLowerCase().includes(ct.toLowerCase()));
        });

        if (timeStart != "" && timeEnd == "") {
            result = result.filter((item) => {
                return new Date(item.time) > new Date(timeStart).setHours(0, 0, 0);
            });
        } else if (timeStart == "" && timeEnd != "") {
            result = result.filter((item) => {
                return new Date(item.time) < new Date(timeEnd).setHours(23, 59, 59);
            });
        } else if (timeStart != "" && timeEnd != "") {
            result = result.filter((item) => {
                return (new Date(item.time) > new Date(timeStart).setHours(0, 0, 0) && new Date(item.time) < new Date(timeEnd).setHours(23, 59, 59)
                );
            });
        }
        showThongKe(result, mode);
    }

    // Show số lượng sp, số lượng đơn bán, doanh thu
    function showOverview(arr) {
        document.getElementById("quantity-product").innerText = arr.length;
        document.getElementById("quantity-order").innerText = arr.reduce((sum, cur) => (sum + parseInt(cur.quantity)), 0);
        document.getElementById("quantity-sale").innerText = vnd(arr.reduce((sum, cur) => (sum + parseInt(cur.doanhthu)), 0));
    }

    function showThongKe(arr, mode) {
        let orderHtml = "";
        let mergeObj = mergeObjThongKe(arr);
        showOverview(mergeObj);

        switch (mode) {
            case 0:
                mergeObj = mergeObjThongKe(createObj());
                showOverview(mergeObj);
                document.getElementById("the-loai-tk").value = "Tất cả";
                document.getElementById("form-search-tk").value = "";
                document.getElementById("time-start-tk").value = "";
                document.getElementById("time-end-tk").value = "";
                break;
            case 1:
                mergeObj.sort((a, b) => parseInt(a.quantity) - parseInt(b.quantity))
                break;
            case 2:
                mergeObj.sort((a, b) => parseInt(b.quantity) - parseInt(a.quantity))
                break;
        }
        for (let i = 0; i < mergeObj.length; i++) {
            orderHtml += `
        <tr>
        <td>${i + 1}</td>
        <td><div class="prod-img-title"><img class="prd-img-tbl" src="${mergeObj[i].img}" alt=""><p>${mergeObj[i].title}</p></div></td>
        <td>${mergeObj[i].quantity}</td>
        <td>${vnd(mergeObj[i].doanhthu)}</td>
        <td><button class="btn-detail product-order-detail" data-id="${mergeObj[i].id}"><i class="fa-regular fa-eye"></i> Chi tiết</button></td>
        </tr>      
        `;
        }
        document.getElementById("showTk").innerHTML = orderHtml;
        document.querySelectorAll(".product-order-detail").forEach(item => {
            let idProduct = item.getAttribute("data-id");
            item.addEventListener("click", () => {
                detailOrderProduct(arr, idProduct);
            })
        })
    }

    showThongKe(createObj())

    function mergeObjThongKe(arr) {
        let result = [];
        arr.forEach(item => {
            let check = result.find(i => i.id == item.id) // Không tìm thấy gì trả về undefined

            if (check) {
                check.quantity = parseInt(check.quantity) + parseInt(item.quantity);
                check.doanhthu += parseInt(item.price) * parseInt(item.quantity);
            } else {
                const newItem = { ...item }
                newItem.doanhthu = newItem.price * newItem.quantity;
                result.push(newItem);
            }

        });
        return result;
    }

    function detailOrderProduct(arr, id) {
        let orderHtml = "";
        arr.forEach(item => {
            if (item.id == id) {
                orderHtml += `<tr>
            <td>${item.madon}</td>
            <td>${item.quantity}</td>
            <td>${vnd(item.price)}</td>
            <td>${formatDate(item.time)}</td>
            </tr>      
            `;
            }
        });
        document.getElementById("show-product-order-detail").innerHTML = orderHtml
        document.querySelector(".modal.detail-order-product").classList.add("open")
    }
</script>


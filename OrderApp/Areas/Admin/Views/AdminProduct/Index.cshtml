@using System.Configuration;
@{
    ViewBag.Title = "Sản phẩm";
}
@section css_header{
    <style>
        .image-upload-preview {
            position: relative;
            display: inline-block;
        }

        .uploading {
            opacity: 0.5;
        }

        .loading-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 255, 255, 0.8);
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 27px;
        }
    </style>
}
@section scripts_header{
    <script>
        const context = {
            imagePath: '@ConfigurationManager.AppSettings["ProductImageUploadPath"]'
        }
    </script>
}
<div class="section product-all">
    <div class="admin-control">
        <div class="admin-control-left">
            <select ng-model="selectedCategoryId">
                <option value="">Tất cả</option>
                <option ng-repeat="item in data.support.categorys" value="{{item.categoryId}}">{{item.categoryName}}</option>
            </select>
        </div>
        <div class="admin-control-center">
            <form action="" class="form-search">
                <span class="search-btn"><i class="fa-light fa-magnifying-glass"></i></span>
                <input ng-model="searchText" type="text" class="form-search-input" placeholder="Tìm kiếm tên món...">
            </form>
        </div>
        <div class="admin-control-right">
            <button class="btn-control-large" id="btn-cancel-product" ng-click="events.onCancelSearchProduct()"><i class="fa-light fa-rotate-right"></i> Làm mới</button>
            <button class="btn-control-large" ng-click="events.onOpenModelProduct()" @*id="btn-add-product"*@><i class="fa-light fa-plus"></i> Thêm món mới</button>
        </div>
    </div>
    <div @*id="show-product"*@>
        <div ng-repeat="item in data.products | filter:searchText | filter:{ categoryId: selectedCategoryId }" class="list">
            <div class="list-left">
                <img ng-src="{{item.fileId ? data.support.imagePath + item.fileId : '/assets/img/blank-image.png'}}" alt="">
                <div class="list-info">
                    <h4 ng-bind-html="item.productName"></h4>
                    <p class="list-note" ng-bind-html="item.productDescription"></p>
                    <span class="list-category" 
                          ng-show="item.categoryId > 0"
                          ng-bind-html="item.categoryName">Món mặn</span>
                </div>
            </div>
            <div class="list-right">
                <div class="list-price">
                    <span class="list-current-price" ng-bind-html="item.productPrice | vnCurrency"></span>
                </div>
                <div class="list-control">
                    <div class="list-tool">
                        <button class="btn-edit" ng-click="events.onOpenModelProduct(item)" @*onclick="editProduct(1)"*@><i class="fa-light fa-pen-to-square"></i></button>
                        <button class="btn-delete" onclick="deleteProduct(1)"><i class="fa-regular fa-trash"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="page-nav">
        <ul class="page-nav-list">
            @*<li class="page-nav-item active"><a href="#">1</a></li>
            <li class="page-nav-item"><a href="#">2</a></li>
            <li class="page-nav-item"><a href="#">3</a></li>
            <li class="page-nav-item"><a href="#">4</a></li>
            <li class="page-nav-item"><a href="#">5</a></li>*@
        </ul>
    </div>
</div>
@*Model add-product*@
<div class="modal add-product">
    <div class="modal-container">
        <h3 class="modal-container-title">{{data.product.productName}}</h3>
        <h3 class="modal-container-title"></h3>
        <button class="modal-close product-form"><i class="fa-regular fa-xmark"></i></button>
        <div class="modal-content">
            <form action="" class="add-product-form">
                <div class="modal-content-left">
                    <div class="image-upload-preview">
                        <!-- ảnh -->
                        <img ng-src="{{data.product.fileId ? data.support.imagePath + data.product.fileId : '/assets/img/blank-image.png'}}" 
                             alt="" 
                             ng-class="{'uploading': isUploading}"
                             class="upload-image-preview">

                        <!-- spinner khi đang upload -->
                        <span ng-if="isUploading" class="loading-overlay">
                            <i class="fa-solid fa-loader fa-spin fa-spin-reverse"></i>
                        </span>
                    </div>
                    <div class="form-group file">
                        <label for="up-hinh-anh" class="form-label-file">
                            <i class="fa-regular fa-cloud-arrow-up"></i>
                            Chọn hình ảnh
                        </label>
                        <input accept="image/jpeg, image/png, image/jpg"
                               ng-click="methods.checkBeforeUpload($event)"
                               ng-disabled="isUploading"
                               id="up-hinh-anh"
                               name="up-hinh-anh"
                               type="file"
                               class="form-control"
                               onchange="angular.element(this).scope().methods.updateFile(this)">
                    </div>
                </div>
                <div class="modal-content-right">
                    <div class="form-group">
                        <label for="ten-mon" class="form-label">Tên món</label>
                        <input  ng-model="data.product.productName" id="ten-mon" name="ten-mon" type="text" placeholder="Nhập tên món"
                               class="form-control">
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group edit-account-e">
                        <label for="" class="form-label">Trạng thái</label>
                        <input ng-model="data.product.isActive" type="checkbox" id="user-status" class="switch-input">
                        <label for="user-status" class="switch"></label>
                    </div>
                    <div class="form-group">
                        <label for="category" class="form-label">Chọn món</label>
                        <select ng-model="data.product.categoryId"
                                ng-options="c.categoryId as c.categoryName for c in data.support.categorys">
                        </select>
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="gia-moi" class="form-label">Giá bán</label>
                        <input  ng-model="data.product.productPrice" 
                               format-number-input
                               id="gia-moi" name="gia-moi" type="text" placeholder="Nhập giá bán"
                               class="form-control">
                        <span class="form-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="mo-ta" class="form-label">Mô tả</label>
                        <textarea  ng-model="data.product.productDescription" class="product-desc" id="mo-ta" placeholder="Nhập mô tả món ăn..."></textarea>
                        <span class="form-message"></span>
                    </div>
                    <button ng-click="events.onAdd($event)" class="form-submit btn-add-product-form" @*id="add-product-button"*@>
                        <span>LƯU THAY ĐỔI </span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    // Doi sang dinh dang tien VND
    function vnd(price) {
        return price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }
</script>

@section scripts_footer {
    <script>
        app.controller("mainCtrl", function ($scope, $http) {
            $scope.data = {
                product: {
                    isActive: true
                },
                support: {
                    imagePath: context.imagePath,
                }
            }

            $scope.init = function () {
                $scope.methods.loadInit();
            };

            $scope.events = {
                onAdd: function ($event) {
                    const button = $event.currentTarget;
                    shareData.loadButton.loading(button, true);

                    const data = {
                        product: $scope.data.product
                    }
                    $scope.methods.update(data, button)
                },
                onOpenModelProduct: function (product) {
                    let isNew;
                    if (product == null || product == undefined) {
                        isNew = true;
                    }
                    else isNew = false;
                    if (isNew) {
                        $scope.data.product = {
                            isActive: true
                        };
                    }
                    else {
                        $scope.data.product = product;
                    }
                    document.querySelector(".add-product").classList.add("open");
                },
                onCancelSearchProduct: function () {
                    $scope.selectedCategoryId = '';
                    $scope.searchText = '';
                }
            };
            $scope.methods = {
                loadInit: function (button) {
                    $http({
                        url: '/api/admin/product/get-all',
                        method: "Get"
                    })
                        .then(function (response) {
                            //console.log('data', response.data);

                            $scope.data.products = response.data.products;
                            $scope.data.support.categorys = response.data.categorys;
                        })
                        .catch(function (response) {
                            shareData.notification.exception();
                            console.error('catch error', response);
                        })
                        .finally(function () {
                            if (button != null) {
                                shareData.loadButton.loaded(button);
                            }
                        });
                },
                update: function (data, button) {

                    $http({
                        url: '/api/admin/product/update',
                        method: "POST",
                        data: data
                    })
                        .then(function (response) {
                            if (response.data.success == true) {
                                if (response.data?.objectResponses?.id > 0) {
                                    $scope.data.product.productId = response.data.objectResponses.id;
                                }
                                $scope.methods.loadInit(button);
                            }
                            else {
                                shareData.notification.fail(response.data.messageForUser)
                                console.error('response error', response)
                            }
                        })
                        .catch(function (response) {
                            shareData.notification.exception();
                            console.error('catch error', response);
                        })
                        .finally(function () {

                        });
                },
                checkBeforeUpload: function ($event) {
                    if (!$scope.data.product.productId) {
                        shareData.notification.fail('Bạn cần lưu sản phẩm mới trước khi upload hình ảnh')
                        $event.preventDefault(); // chặn click
                    }
                },
                updateFile: function (input) {
                    
                    var file = input.files[0];
                    if (!file) {
                        return;
                    }

                    // Gửi file + productId lên server
                    var formData = new FormData();
                    formData.append("file", file);

                    $scope.isUploading = true; // Bắt đầu loading
                    $http.post(`/api/admin/product/upload-image?productId=${$scope.data.product.productId}`, formData, {
                        transformRequest: angular.identity,
                        headers: { 'Content-Type': undefined }
                    })
                    .then(function (response) {
                        if (response.data.success === true) {
                            $scope.data.product.fileId = response.data.objectResponses.fileId;
                            
                        } else {
                            shareData.notification.fail(response.data.messageForUser);
                            console.error('response error', response);
                        }
                    })
                    .catch(function (response) {
                        shareData.notification.exception();
                        console.error('catch error', response);
                    })
                    .finally(function () {
                        $scope.isUploading = false; // Dừng loading
                    });
                }
            };
            $scope.init();
        });
    </script>
}


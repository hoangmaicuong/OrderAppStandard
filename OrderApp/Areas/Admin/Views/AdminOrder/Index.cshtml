@using System.Configuration;

@{
    ViewBag.Title = "Đơn hàng";
}
@section css_header{
    <style>
        .status-order-new {
            background-color: #f04e2e;
            color: #fff;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 15px;
            display: inline-block;
        }

        .status-order-finish {
            background-color: #e5e5e5;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 15px;
            display: inline-block;
        }
    </style>
}
@section scripts_header{
    <script>
        const context = {
            imagePath: '@ConfigurationManager.AppSettings["ProductImageUploadPath"]'
        }
    </script>
}
<div class="section">
    <div class="admin-control">
        <div class="admin-control-left">
            <select ng-model="selectedStatusOrder">
                <option value="">Tất cả trạng thái</option>
                <option value="true">Hoàn thành</option>
                <option value="false">Đơn mới</option>
            </select>
        </div>
        <div class="admin-control-center">
            <form action="" class="form-search">
                <span class="search-btn"><i class="fa-light fa-magnifying-glass"></i></span>
                <input ng-model="searchText" type="text" class="form-search-input" placeholder="Tìm kiếm mã đơn, khách hàng..." oninput="findOrder()">
            </form>
        </div>
        @*<div class="admin-control-right">
            <form action="" class="fillter-date">
                <div>
                    <label for="time-start">Từ</label>
                    <input type="date" class="form-control-date" id="time-start" onchange="findOrder()">
                </div>
                <div>
                    <label for="time-end">Đến</label>
                    <input type="date" class="form-control-date" id="time-end" onchange="findOrder()">
                </div>
            </form>
            <button class="btn-reset-order" onclick="cancelSearchOrder()"><i class="fa-light fa-arrow-rotate-right"></i></button>
        </div>*@
    </div>
    <div class="table">
        <table width="100%">
            <thead>
                <tr>
                    <td>#</td>
                    <td>Trạng thái</td>
                    <td>Bàn đặt</td>
                    <td>Ngày đặt</td>
                    <td>Mã đơn</td>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="item in data.orders | filter:searchText | filter:{ isFinish: selectedStatusOrder }">
                    <td>
                        <button class="btn-detail"
                                ng-click="events.onOpenModelOrder($event, item)">
                            <i class="fa-regular fa-eye"></i>
                        </button>
                    </td>
                    <td>
                        <span ng-show="item.isFinish" class="status-order-finish">Hoàn thành</span>
                        <span ng-hide="item.isFinish" class="status-order-new">Đơn mới</span>
                    </td>
                    <td ng-bind="item.tableName"></td>
                    <td ng-bind="item.orderDate | formatDateTime"></td>
                    <td ng-bind="item.orderId"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="modal detail-order">
    <div class="modal-container">
        <h3 class="modal-container-title">CHI TIẾT ĐƠN HÀNG</h3>
        <button class="modal-close"><i class="fa-regular fa-xmark"></i></button>
        <div class="modal-detail-order">
            <div class="modal-detail-left">
                <div class="order-item-group">
                    <div ng-repeat="item in data.order.orderDetails" class="order-product">
                        <div class="order-product-left">
                            <img ng-src="{{item.fileId ? data.support.imagePath + item.fileId : '/assets/img/blank-image.png'}}" alt="">
                            <div class="order-product-info">
                                <h4 ng-bind="item.productName"></h4>
                                <p ng-show="item.orderDetailNote != null" 
                                   ng-bind="item.orderDetailNote" 
                                   class="order-product-note">
                                </p>
                                <p ng-show="item.orderDetailNote == null" 
                                   class="order-product-note">
                                    <i class="fa-light fa-pen"></i> Không có ghi chú
                                </p>
                                <p ng-bind="'SL: ' + item.orderDetailQuantity" class="order-product-quantity"></p>
                            </div>
                        </div>
                        <div class="order-product-right">
                            <div class="order-product-price">
                                <span ng-bind-html="item.productPrice | vnCurrency" class="order-product-current-price"></span>
                            </div>
                            <div>&nbsp;</div>
                            <div>
                                <button type="button"
                                        ng-click="events.onRemoveOrderDetail($index, item, $event)"
                                        class="btn-edit" style="float: right; background-color:white">
                                    <i class="fa-duotone fa-solid fa-xmark"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-detail-right">
                <ul class="detail-order-group">
                    <li class="detail-order-item">
                        <span class="detail-order-item-left"><i class="fa-light fa-location-dot"></i> Bàn đặt</span>
                        <span ng-bind="data.order.tableName" class="detail-order-item-right"></span>
                    </li>
                    <li class="detail-order-item">
                        <span class="detail-order-item-left"><i class="fa-light fa-code"></i> Mã đơn</span>
                        <span ng-bind="data.order.orderId" class="detail-order-item-right"></span>
                    </li>
                    <li class="detail-order-item">
                        <span class="detail-order-item-left"><i class="fa-light fa-calendar-days"></i> Ngày đặt hàng</span>
                        <span ng-bind="data.order.orderDate | formatDateTime" class="detail-order-item-right"></span>
                    </li>
                </ul>
            </div>
        </div>
        <div class="modal-detail-bottom">
            <div class="modal-detail-bottom-left">
                <div class="price-total">
                    <span class="thanhtien">Thành tiền</span>
                    <span ng-bind-html="methods.totalPriceForOrder(data.order) | vnCurrency" class="price"></span>
                </div>
            </div>
            <div class="modal-detail-bottom-right">
                <button class="modal-detail-btn btn-chuaxuly" onclick="changeStatus('DH2',this)">Xác nhận</button>
                <button class="modal-detail-btn btn-daxuly" onclick="changeStatus('DH1',this)">Hoàn thành</button>
            </div>
        </div>

    </div>
</div>
@section scripts_footer {
    <script>
        app.controller("mainCtrl", function ($scope, $http) {
            $scope.data = {
                support: {
                    imagePath: context.imagePath,
                }
            }

            $scope.init = function () {
                $scope.methods.loadInit();
            };

            $scope.events = {
                onOpenModelOrder: async function ($event, order) {
                    const button = $event.currentTarget;
                    shareData.loadButton.loading(button, false);

                    $scope.data.order = order;
                    $scope.data.order.orderDetails = await $scope.methods.getOrderDetails(order.orderId);
                    $scope.$apply();

                    document.querySelector(".detail-order").classList.add("open");
                    shareData.loadButton.loaded(button);
                    //console.log('$scope.data.order', $scope.data.order);
                },
                onRemoveOrderDetail: async function (index, orderDetail, $event) {
                    const button = $event.currentTarget;
                    shareData.loadButton.loading(button, false);

                    let result = false;
                    result = await $scope.methods.removeOrderDetail(orderDetail.orderDetailId);
                    if (result) {
                        $scope.data.order.orderDetails.splice(index, 1);
                        $scope.$apply();
                    }
                    shareData.loadButton.loaded(button);
                }
            };
            $scope.methods = {
                loadInit: function (button) {
                    $http({
                        url: '/api/admin/order/get-all',
                        method: "Get"
                    })
                        .then(function (response) {
                            console.log('data', response.data);
                            $scope.data.orders = response.data.orders;
                        })
                        .catch(function (response) {
                            shareData.notification.exception();
                            console.error('catch error', response);
                        })
                        .finally(function () {
                            if (button != null) {
                                shareData.loadButton.loaded(button);
                            }
                        });
                },
                update: function (data, button) {

                    $http({
                        url: '/api/admin/table/update',
                        method: "POST",
                        data: data
                    })
                        .then(function (response) {
                            if (response.data.success == true) {
                                if (response.data?.objectResponses?.id > 0) {
                                    $scope.data.table.tableId = response.data.objectResponses.id;
                                }
                                $scope.methods.loadInit(button);
                            }
                            else {
                                shareData.notification.fail(response.data.messageForUser)
                                console.error('response error', response)
                            }
                        })
                        .catch(function (response) {
                            shareData.notification.exception();
                            console.error('catch error', response);
                        })
                        .finally(function () {

                        });
                },
                getOrderDetails: async function (orderId) {
                    return await $http({
                        url: '/api/admin/order/get-order-details?orderId=' + orderId,
                        method: "Get"
                    })
                    .then(function (response) {
                        return response.data.orderDetails;
                    })
                    .catch(function (response) {
                        shareData.notification.exception();
                        console.error('catch error', response);
                    })
                    .finally(function () {
                        
                    });
                },
                removeOrderDetail: async function (orderDetailId) {
                    return await $http({
                        url: '/api/admin/order/remove-order-detail?orderDetailId=' + orderDetailId,
                        method: "Post"
                    })
                    .then(function (response) {
                        if (response.data.success == true) {
                            return true;
                        }
                        else {
                            shareData.notification.fail(response.data.messageForUser)
                            console.error('response error', response)
                        }
                        return false;
                    })
                    .catch(function (response) {
                        shareData.notification.exception();
                        console.error('catch error', response);
                    })
                    .finally(function () {

                    });
                },
                totalPriceForOrder: function (order) {
                    let total = 0;
                    if (order != null && order.orderDetails != null) {
                        for (item of order.orderDetails) {
                            total += (item.productPrice * item.orderDetailQuantity);
                        }
                    }
                    return total;
                }
            };
            $scope.init();
        });
    </script>
}
